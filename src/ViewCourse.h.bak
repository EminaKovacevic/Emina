#pragma once
#include <gui/View.h>
#include <gui/Label.h>
#include <gui/LineEdit.h>
#include <gui/TextEdit.h>
#include <gui/VerticalLayout.h>
#include <gui/HorizontalLayout.h>
#include <gui/GridLayout.h>
#include <gui/Button.h>
#include <gui/NumericEdit.h>
#include <gui/ComboBox.h>
#include <gui/DBComboBox.h>
#include <gui/CheckBox.h>
#include <gui/Slider.h>
#include <gui/ProgressIndicator.h>
#include <gui/GridComposer.h>
#include <gui/DateEdit.h>
#include <gui/TimeEdit.h>
#include <gui/ColorPicker.h>
#include <gui/TableEdit.h>
#include <dp/IDatabase.h>
#include <dp/IDataSet.h>
#include <dp/IDataSetDelegate.h>
#include <fo/FileOperations.h>
#include <gui/ImageView.h>
#include <gui/Color.h>
//popotrebi dodati jos

//po potrebi dinamicka lib DIALOGS_LIB_API

class ViewCourse: public gui::View
{
protected:
    gui::Label _lblID;
    gui::NumericEdit _id;
    gui::Label _lblName;
    gui::LineEdit _name;
    gui::Label _lblIDCODE;
    gui::NumericEdit _idCode;
    gui::Label _lblIDDEP;
    gui::DBComboBox _idDep;
    /*godina studija??*/
    gui::Label _yearStudy;
    gui::NumericEdit _year;
    gui::Label _lblEcts;
    gui::LineEdit _ects;
    gui::Label _lblElective;
    gui::DBComboBox _elective;
    gui::Label _lblTeachingStaff;
    gui::LineEdit _teachingStaff;
    gui::Label _lblMaxNum;
    gui::NumericEdit _maxNum;

    gui::TableEdit _table;

    gui::HorizontalLayout _hlBtns;
    gui::Button _btnSave;
    gui::Button _btnAdd;
   /* gui::Button _btnReload;
    gui::Button _btnRemoveAll;
    gui::Button _btnDelete;
    gui::Button _btnUpdate;
    gui::Button _btnInsert;
    gui::Button _btnPushBack;*/
    gui::GridLayout _gl;



    dp::IDatabase* _db;
    dp::IDataSet* _pDS = nullptr;
    td::INT4 _paramFrom;
    td::INT4 _paramTo;

    std::vector<td::INT4> _itemsToDelete, _itemsToInsert, _itemsToUpdate; //vjerovatno ce trebati kasnije
public:
    ViewCourse();
    ~ViewCourse();      // release DB

protected:
    void populateData();
    bool loadComboBox(td::String select, gui::DBComboBox& combo);
    virtual bool onChangedSelection(gui::TableEdit* pTE);
    void populateDSRow(dp::IDataSet::Row& row);
    //bool canAdd();    //trenutno ne treba 
    virtual bool onClick(gui::Button * pBtn);
    bool insertCourse();

};
